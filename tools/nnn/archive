#!/usr/bin/env fish
set bold (tput bold)
set reset (tput sgr0)

# Get selected files
set selected_files
if test -s ~/.config/nnn/.selection
    while read --null selection
        set --append selected_files (string replace --regex "^$PWD/" '' $selection)
    end <~/.config/nnn/.selection
else
    set selected_files $nnn
end

echo
echo $bold"[ARCHIVE] Going to compress the following $(count $selected_files) item(s):"$reset
echo
for i in (seq (count $selected_files))
    echo "  $i: $selected_files[$i]"
end
echo

if test (count $selected_files) -eq 1
    set selection $selected_files[1]

    if test -f $selection # Single file
        switch (gum choose --header 'Which format to compress to?' .zst .gz .zip || return)
            case .zst
                echo "Generating $selection.zst"
                zstd $selection
            case .gz
                echo "Generating $selection.gz"
                gzip --keep $selection
            case .zip
                echo "Generating $selection.zip"
                zip $selection.zip $selection
        end
    else if test -d $selection # Single directory
        switch (gum choose --header 'Which format to compress to?' .tar.zst .tgz .tar .zip || return)
            case .tar.zst
                echo "Generating $selection.tar.zst"
                tar --zstd --create --file $selection.tar.zst $selection
            case .tgz
                echo "Generating $selection.tgz"
                tar --gzip --create --file $selection.tgz $selection
            case .tar
                echo "Generating $selection.tar"
                tar --create --file $selection.tar $selection
            case .zip
                echo "Generating $selection.zip"
                zip -r $selection.zip $selection
        end
    end
else # Multiple files / directories
    read --line --prompt-str 'Filename without extension: ' output
    if test -z $output
        echo Abort
        return 1
    end
    switch (gum choose --header 'Which format to compress to?' .tar.zst .tgz .tar .zip || return)
        case .tar.zst
            echo "Generating $output.tar.zst"
            tar --zstd --create --file $output.tar.zst $selected_files
        case .tgz
            echo "Generating $output.tgz"
            tar --gzip --create --file $output.tgz $selected_files
        case .tar
            echo "Generating $output.tar"
            tar --create --file $output.tar $selected_files
        case .zip
            echo "Generating $output.zip"
            zip -r $output.zip $selected_files
    end
end
