#!/usr/bin/env fish
# ----------------------------- #
# Compress or extract archives. #
# ----------------------------- #

source (status dirname)/.utils

nnn_get_selection ARCHIVE extract/compress $argv[1] || return

if test (count $NNN_SELECTION) -eq 1
    set selection $NNN_SELECTION[1]
    if test -f $selection
        # For a single file, check extension and auto-choose between archive/extract
        switch $selection # Try to extract
            case '*.zip'
                echo "[ARCHIVE] Extracting $selection"
                if which unar &>/dev/null
                    unar $selection
                else
                    unzip $selection
                end
            case '*.rar'
                echo "[ARCHIVE] Extracting $selection"
                unar $selection
            case '*.tar'
                echo "[ARCHIVE] Extracting $selection"
                tar --extract --file $selection
            case '*.tgz'
                echo "[ARCHIVE] Extracting $selection"
                tar --gzip --extract --file $selection
            case '*.tar.gz'
                echo "[ARCHIVE] Extracting $selection"
                tar --gzip --extract --file $selection
            case '*.tar.xz'
                echo "[ARCHIVE] Extracting $selection"
                tar --xz --extract --file $selection
            case '*.tar.zst'
                echo "[ARCHIVE] Extracting $selection"
                tar --zstd --extract --file $selection
            case '*.zst'
                echo "[ARCHIVE] Extracting $selection"
                unzstd $selection
            case '*.gz'
                echo "[ARCHIVE] Extracting $selection"
                gunzip --keep $selection
            case '*'
                # Archive instead
                gum choose --header 'Which format to compress to?' .zst .gz .zip | read format || return
                switch $format
                    case .zst
                        echo "[ARCHIVE] Generating $selection.zst"
                        zstd $selection
                    case .gz
                        echo "[ARCHIVE] Generating $selection.gz"
                        gzip --keep $selection
                    case .zip
                        echo "[ARCHIVE] Generating $selection.zip"
                        zip $selection.zip $selection
                end
        end
    else if test -d $selection
        # For a single directory, archive
        gum choose --header 'Which format to compress to?' .tar.zst .tgz .tar .zip | read format || return
        switch $format
            case .tar.zst
                echo "[ARCHIVE] Generating $selection.tar.zst"
                tar --zstd --create --file $selection.tar.zst $selection
            case .tgz
                echo "[ARCHIVE] Generating $selection.tgz"
                tar --gzip --create --file $selection.tgz $selection
            case .tar
                echo "[ARCHIVE] Generating $selection.tar"
                tar --create --file $selection.tar $selection
            case .zip
                echo "[ARCHIVE] Generating $selection.zip"
                zip -r $selection.zip $selection
        end
    end
else # For multiple selections, compress all into one file
    read --line --prompt-str "[ARCHIVE] Compressed file's name without extension: " output || return
    if test -z "$output"
        echo Abort >&2
        return 1
    end
    gum choose --header 'Which format to compress to?' .tar.zst .tgz .tar .zip | read format || return
    switch $format
        case .tar.zst
            echo "[ARCHIVE] Generating $output.tar.zst"
            tar --zstd --create --file $output.tar.zst $NNN_SELECTION
        case .tgz
            echo "[ARCHIVE] Generating $output.tgz"
            tar --gzip --create --file $output.tgz $NNN_SELECTION
        case .tar
            echo "[ARCHIVE] Generating $output.tar"
            tar --create --file $output.tar $NNN_SELECTION
        case .zip
            echo "[ARCHIVE] Generating $output.zip"
            zip -r $output.zip $NNN_SELECTION
    end
end
