#!/usr/bin/env fish
set music .mp3 .m4a .ogg .opus .flac
set video .mp4 .mkv .webm .3gp .ogv
set image .avif .bmp .gif .heic .heif .heifs .ico .jpeg .jpg .png .svg .tif .tiff .webp

set music_regex (string join '|' $music'$')
set video_regex (string join '|' $video'$')
set image_regex (string join '|' $image'$')

if test -f $nnn
    # Text file
    if string match -qr '.m3u8?$' $nnn
        # Playlist
        nohup mpv --profile=music --shuffle --loop-playlist $nnn &>~/.local/logs/music-player.log &
        return 0
    else if string match -qr '.alb$' $nnn
        # Album
        if gum confirm 'Shuffle?'
            shuf <$nnn | xargs --no-run-if-empty nohup mvi &>/dev/null &
        else
            sort --version-sort <$nnn | xargs --no-run-if-empty nohup mvi &>/dev/null &
        end
        return 0
    end

    # Detect media category
    if string match -qr $music_regex $nnn
        set category music
    else if string match -qr $video_regex $nnn
        set category video
    else if string match -qr $image_regex $nnn
        set category image
    end
    if test -z "$category"
        echo 'Current file is not media' >&2
        exit 1
    end

    # Find parameters
    set params -maxdepth 1 -type f '('
    switch $category
        case music
            for extension in $music
                set --append params -iname '*'$extension -or
            end
        case video
            for extension in $video
                set --append params -iname '*'$extension -or
            end
        case image
            for extension in $image
                set --append params -iname '*'$extension -or
            end
    end
    set params[-1] ')'

    # Find files, sort and run
    switch $category
        case music
            find . $params -printf '%P\0' \
                | sort --zero-terminated --version-sort \
                | xargs --null --no-run-if-empty nohup mpv --profile=music --loop-playlist &>~/.local/logs/music-player.log &
        case video
            find . $params -printf '%P\0' \
                | sort --zero-terminated --version-sort \
                | xargs --null --no-run-if-empty nohup mpv &>/dev/null &
        case image
            find . $params -printf '%P\0' \
                | sort --zero-terminated --version-sort \
                | xargs --null --no-run-if-empty nohup mvi &>/dev/null &
    end
else if test -d $nnn
    # Detect media category
    for file in $nnn/**/*
        if string match -qr $music_regex $file
            set category music
            break
        else if string match -qr $video_regex $file
            set category video
            break
        else if string match -qr $image_regex $file
            set category image
            break
        end
    end
    if test -z "$category"
        echo 'There is no media file in this directory' >&2
        exit 1
    end

    # Max depth available (search until 3)
    cd $nnn
    set maxdepth 1
    find . -maxdepth 2 -not -path . -type d -printf '%P\n' | while read --line dirpath
        if string match --quiet --entire / $dirpath
            set maxdepth 3
            break
        else
            set maxdepth 2
        end
    end

    # Get depth
    if test $maxdepth = 1
        set depth 1
    else
        set depth (gum choose --header 'Depth:' (seq 1 $maxdepth) || return)
    end

    # Find parameters
    set params -maxdepth $depth -type f -not -path '*/.*' '('
    switch $category
        case music
            for extension in $music
                set --append params -iname '*'$extension -or
            end
        case video
            for extension in $video
                set --append params -iname '*'$extension -or
            end
        case image
            for extension in $image
                set --append params -iname '*'$extension -or
            end
    end
    set params[-1] ')'

    # Find files, shuffle and run
    set playlist_file .playlist-tmp-(date '+%s')
    switch $category
        case music
            find . $params -printf '%P\n' >$playlist_file
            fish --command "
                nohup mpv --profile=music --loop-playlist --playlist=$playlist_file --shuffle &>~/.local/logs/music-player.log
                rm --force $playlist_file
            " &
        case video
            find . $params -printf '%P\n' >$playlist_file
            fish --command "
                nohup mpv --playlist=$playlist_file --shuffle &>/dev/null
                rm --force $playlist_file
            " &
        case image
            find . $params -printf '%P\n' >$playlist_file
            fish --command "
                nohup mvi --playlist=$playlist_file --shuffle &>/dev/null
                rm --force $playlist_file
            " &
    end
end
