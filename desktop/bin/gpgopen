#!/usr/bin/fish
argparse --max-args 1 'h/help' -- $argv
set exitcode $status

function help
    echo 'Usage: gpgopen [-h|--help] FILE' >&2
    echo >&2
    echo '  Synopsis:' >&2
    echo '    Open gpg files using xdg-open.' >&2
    echo >&2
    echo '  Options:' >&2
    echo '    -h, --help      Show list of command-line options' >&2
    echo >&2
    echo '  Arguments:' >&2
    echo '    FILE: The gpg file to be opened' >&2
end

if test $exitcode -ne 0 -o (count $argv) -eq 0 || set --query --local _flag_help
    help
    return $exitcode
end

if not test -f $argv[1]
    echo "$argv[1] is not a file." >&2
    help
    return 1
end

if not string match --quiet --regex '\.gpg$' $argv[1]
    echo "$argv[1] should have .gpg extension." >&2
    return 1
end

set cache_dir ~/.cache/gpgopen
set out_file $cache_dir/(string replace --regex '\.gpg$' '' (path basename $argv[1]))

mkdir --parents $cache_dir
if not gpg --output $out_file --decrypt $argv[1]
    echo "$argv[1] is not a gpg file" >&2
    return 1
end
touch --reference $argv[1] $out_file

set before_shasum "$(shasum $out_file)"
xdg-open $out_file

if test $before_shasum = "$(shasum $out_file)"
    echo "File was not edited." >&2
    shred --remove $out_file
    return 0
end

gpg --output $argv[1] --encrypt --default-recipient-self $out_file && shred --remove $out_file
